input {
  # load the data from the perfservlet using curl 
  # repeat this section for each JVM instance and DONT call the perfservlet for multiple JVMs in a single run
  exec { 
    add_field => ["was_host", "bpmhost.com"] # FIXME - add the host name 

    # execute curl command 
    # Linux:  
    # I had to pipe the curl result to a file and then pass it over to logstash - the reason might be some newlines from my WAS
    # curl -k -s --user user:password http://host:port/wasPerfTool/servlet/perfservlet?node=node&server=server > /tmp/test.xml && cat /tmp/test.xml
    # 
    # Windows: 
    # Be careful with windows console escape strings an "&" needs a leading "^"
    # Piping does not seem to be required on windows
    # curl.exe -k --user user:password http://host:port/wasPerfTool/servlet/perfservlet?node=node^&server=server 

    command => "curl -k -s --user admin:admin http://192.168.1.113:9080/wasPerfTool/servlet/perfservlet?node=Node1 > /tmp/test.xml && cat /tmp/test.xml" # FIXME - add curl command
    
    interval => 60
    type => "perfservlet"
  }
}

filter {
  xml {
    store_xml => "false"
    source => "message"
    xpath => [
      "//Node/@name", "node",
      "//Server/@name", "server",
      "//Stat[@name='server']/Stat[@name='JVM Runtime']/BoundedRangeStatistic[@name='HeapSize']/@value", "Jvm.HeapSize",
      "//Stat[@name='server']/Stat[@name='JVM Runtime']/CountStatistic[@name='UsedMemory']/@count", "Jvm.UsedMemory",
      "//Stat[@name='server']/Stat[@name='JVM Runtime']/CountStatistic[@name='ProcessCpuUsage']/@count", "Jvm.ProcessCpuUsage",

      "//Stat[@name='server']/Stat[@name='Transaction Manager']/CountStatistic[@name='ActiveCount']/@count", "TransactionManager.ActiveCount",
      "//Stat[@name='server']/Stat[@name='Transaction Manager']/CountStatistic[@name='CommittedCount']/@count", "TransactionManager.CommittedCount",
      "//Stat[@name='server']/Stat[@name='Transaction Manager']/CountStatistic[@name='RolledbackCount']/@count", "TransactionManager.RolledbackCount",

      "//Stat[@name='server']/Stat[@name='Thread Pools']/Stat[@name='WebContainer']/BoundedRangeStatistic[@name='ActiveCount']/@value", "ThreadPools.WebContainer.ActiveCount",
      "//Stat[@name='server']/Stat[@name='Thread Pools']/Stat[@name='WebContainer']/BoundedRangeStatistic[@name='PoolSize']/@value", "ThreadPools.WebContainer.PoolSize",

      "//Stat[@name='server']/Stat[@name='Thread Pools']/Stat[@name='Default']/BoundedRangeStatistic[@name='ActiveCount']/@value", "ThreadPools.Default.ActiveCount",
      "//Stat[@name='server']/Stat[@name='Thread Pools']/Stat[@name='Default']/BoundedRangeStatistic[@name='PoolSize']/@value", "ThreadPools.Default.PoolSize",
	  
	    "//Stat[@name='server']/Stat[@name='Thread Pools']/Stat[@name='SIBJMSRAThreadPool']/BoundedRangeStatistic[@name='ActiveCount']/@value", "ThreadPools.SIBJMSRAThreadPool.ActiveCount",
      "//Stat[@name='server']/Stat[@name='Thread Pools']/Stat[@name='SIBJMSRAThreadPool']/BoundedRangeStatistic[@name='PoolSize']/@value", "ThreadPools.SIBJMSRAThreadPool.PoolSize",
	  
	    # jdbc connection pools
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/ProcessDB']/BoundedRangeStatistic[@name='PoolSize']/@value", "ConnectionPools.ProcessDB.PoolSize",
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/ProcessDB']/RangeStatistic[@name='WaitingThreadCount']/@value", "ConnectionPools.ProcessDB.WaitingThreadCount",
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/ProcessDB']/TimeStatistic[@name='UseTime']/@totalTime", "ConnectionPools.ProcessDB.UseTime",
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/ProcessDB']/TimeStatistic[@name='WaitTime']/@totalTime", "ConnectionPools.ProcessDB.WaitTime",

	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/TeamWorksDB']/BoundedRangeStatistic[@name='PoolSize']/@value", "ConnectionPools.TeamWorksDB.PoolSize",
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/TeamWorksDB']/RangeStatistic[@name='WaitingThreadCount']/@value", "ConnectionPools.TeamWorksDB.WaitingThreadCount",
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/TeamWorksDB']/TimeStatistic[@name='UseTime']/@totalTime", "ConnectionPools.TeamWorksDB.UseTime",
	    "//Stat[@name='server']/Stat[@name='JDBC Connection Pools']/Stat/Stat[@name='jdbc/TeamWorksDB']/TimeStatistic[@name='WaitTime']/@totalTime", "ConnectionPools.TeamWorksDB.WaitTime",
 
      # http sessions
      "//Stat[@name='server']/Stat[@name='Servlet Session Manager']/Stat[contains(@name, 'process-portal.war')]/RangeStatistic[@name='LiveCount']/@value", "ServletSessionManager.process-portal.LiveCount",
      "//Stat[@name='server']/Stat[@name='Servlet Session Manager']/Stat[contains(@name, 'teamworks.war')]/RangeStatistic[@name='LiveCount']/@value", "ServletSessionManager.teamworks.LiveCount",
      "//Stat[@name='server']/Stat[@name='Servlet Session Manager']/Stat[contains(@name, 'bpmrest.war')]/RangeStatistic[@name='LiveCount']/@value", "ServletSessionManager.bpmrest.LiveCount"
    ]
  }
  mutate {
    convert => [ "Jvm.HeapSize", "integer" ]
    convert => [ "Jvm.UsedMemory", "integer" ]
    convert => [ "Jvm.ProcessCpuUsage", "integer" ]

    convert => [ "TransactionManager.ActiveCount", "integer" ]
    convert => [ "TransactionManager.CommittedCount", "integer" ]
    convert => [ "TransactionManager.RolledbackCount", "integer" ]
      
    convert => [ "ThreadPools.WebContainer.ActiveCount", "integer" ]
    convert => [ "ThreadPools.WebContainer.PoolSize", "integer" ]

    convert => [ "ThreadPools.Default.ActiveCount", "integer" ]
    convert => [ "ThreadPools.Default.PoolSize", "integer" ]
	convert => [ "ThreadPools.SIBJMSRAThreadPool.ActiveCount", "integer" ]
    convert => [ "ThreadPools.SIBJMSRAThreadPool.PoolSize", "integer" ]
    
    convert => [ "ServletSessionManager.process-portal.LiveCount", "integer" ]
    convert => [ "ServletSessionManager.teamworks.LiveCount", "integer" ]
    convert => [ "ServletSessionManager.bpmrest.LiveCount", "integer" ]
	
	# jdbc connection pools
	convert => [ "ConnectionPools.ProcessDB.PoolSize", "integer" ]
    convert => [ "ConnectionPools.ProcessDB.WaitingThreadCount", "integer" ]
	convert => [ "ConnectionPools.ProcessDB.UseTime", "integer" ]
    convert => [ "ConnectionPools.ProcessDB.WaitTime", "integer" ]
	convert => [ "ConnectionPools.TeamWorksDB.PoolSize", "integer" ]
    convert => [ "ConnectionPools.TeamWorksDB.WaitingThreadCount", "integer" ]
	convert => [ "ConnectionPools.TeamWorksDB.UseTime", "integer" ]
    convert => [ "ConnectionPools.TeamWorksDB.WaitTime", "integer" ]
  }
  mutate {
    # override host fieled
    replace => ["host" , "%{was_host}"]
    remove_field => ["message", "command", "was_host", "tags"]
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    host => localhost
	  index => "logstash-perfservlet-%{+YYYY.MM.dd}"
  }
}